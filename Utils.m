(* ::Package:: *)

(* ::Input:: *)
(*Unprotect[Part,Set,Piecewise,Delete];*)
(*Delete[s_String,p_]:=StringReplace[s,HoldPattern[p]->""]*)
(*HoldPattern[{___,key_->value_,___}[[key_]]]:=value;*)
(*HoldPattern[Set[hashMap_[[key_]],value_]]:=Append[hashMap,key->value]*)
(*Sprite[img_Image,x_:0,y_:0]:=Module[{size=ImageDimensions[img],w,h},*)
(*w=size[[1]];h=size[[2]];*)
(*{Texture[ImageData[img]],Polygon[\!\(\**)
(*TagBox[*)
(*RowBox[{"(", "", GridBox[{*)
(*{"x", "y"},*)
(*{"w", "y"},*)
(*{"w", "h"},*)
(*{"x", "h"}*)
(*},*)
(*GridBoxAlignment->{"Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},*)
(*GridBoxSpacings->{"Columns" -> {Offset[0.27999999999999997`], {Offset[0.7]}, Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {Offset[0.2], {Offset[0.4]}, Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", ")"}],*)
(*Function[BoxForm`e$, MatrixForm[BoxForm`e$]]]\),VertexTextureCoordinates->\!\(\**)
(*TagBox[*)
(*RowBox[{"(", "", GridBox[{*)
(*{"0", "0"},*)
(*{"1", "0"},*)
(*{"1", "1"},*)
(*{"0", "1"}*)
(*},*)
(*GridBoxAlignment->{"Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},*)
(*GridBoxSpacings->{"Columns" -> {Offset[0.27999999999999997`], {Offset[0.7]}, Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {Offset[0.2], {Offset[0.4]}, Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", ")"}],*)
(*Function[BoxForm`e$, MatrixForm[BoxForm`e$]]]\)]}]*)
(*Unfix[expr_]:=Sequence@@expr;*)
(*MakeCookies[str_String]:=(Module[{pair=StringSplit[#,"="]},*)
(*{"Domain"->".",*)
(*"Path"->"/",*)
(*"Secure"->"FALSE",*)
(*"Expires"->DateString[{2020, 1, 1, 0, 0, 0}],*)
(*"Name"->RemoveWhiteSpace[First@pair],*)
(*"Value"->Last@pair}]&)/@StringSplit[str,";"];*)
(*Piecewise[{cond___,{else_,else|otherwise}},0]:=Piecewise[{cond},else]*)
(*JSON[data_]:=ExportString[data,"JSON"];*)
(*ConvertAS3Matrix[{a_,b_,c_,d_,tx_,ty_}]:=({*)
(* {a, c, tx},*)
(* {b, d, -ty},*)
(* {0, 0, 1}*)
(*})*)
(*RemoveWhiteSpace[str_]:=StringReplace[str,{Whitespace->""}]*)
(*JSONCompress[jsonStr_String]:=StringReplace[jsonStr,{Whitespace->""}]*)
(*Zero:=0|0.0;*)
(*ResolveAffineMatrix[\!\(\**)
(*TagBox[*)
(*RowBox[{"(", "", GridBox[{*)
(*{"a_", "Zero", "x_"},*)
(*{"Zero", "d_", "y_"},*)
(*{"_", "_", "_"}*)
(*},*)
(*GridBoxAlignment->{"Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},*)
(*GridBoxSpacings->{"Columns" -> {Offset[0.27999999999999997`], {Offset[0.7]}, Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {Offset[0.2], {Offset[0.4]}, Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", ")"}],*)
(*Function[BoxForm`e$, MatrixForm[BoxForm`e$]]]\)]:={"rotation"->0,"translation"->{x,y},"scale"->{a,d}};*)
(*ResolveAffineMatrix[\!\(\**)
(*TagBox[*)
(*RowBox[{"(", "", GridBox[{*)
(*{"Zero", "c_", "x_"},*)
(*{"b_", "Zero", "y_"},*)
(*{"_", "_", "_"}*)
(*},*)
(*GridBoxAlignment->{"Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},*)
(*GridBoxSpacings->{"Columns" -> {Offset[0.27999999999999997`], {Offset[0.7]}, Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {Offset[0.2], {Offset[0.4]}, Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", ")"}],*)
(*Function[BoxForm`e$, MatrixForm[BoxForm`e$]]]\)]:={"rotation"->\[Pi]/2*180/Pi,"translation"->{x,y},"scale"->{b,-c}};*)
(*ResolveAffineMatrix[\!\(\**)
(*TagBox[*)
(*RowBox[{"(", "", GridBox[{*)
(*{"a_", "c_", "x_"},*)
(*{"b_", "d_", "y_"},*)
(*{"_", "_", "_"}*)
(*},*)
(*GridBoxAlignment->{"Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},*)
(*GridBoxSpacings->{"Columns" -> {Offset[0.27999999999999997`], {Offset[0.7]}, Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {Offset[0.2], {Offset[0.4]}, Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", ")"}],*)
(*Function[BoxForm`e$, MatrixForm[BoxForm`e$]]]\)]:=Module[{r=ArcCot[a/b],rotation,scale},*)
(*rotation=\!\(\**)
(*TagBox[GridBox[{*)
(*{"\[Piecewise]", GridBox[{*)
(*{*)
(*RowBox[{"r", "+", "\[Pi]"}], *)
(*RowBox[{"a", "<", "0"}]},*)
(*{*)
(*RowBox[{"r", "+", *)
(*RowBox[{"2", "\[Pi]"}]}], *)
(*RowBox[{"b", "<", "0"}]},*)
(*{"r", "otherwise"}*)
(*},*)
(*AllowedDimensions->{2, Automatic},*)
(*Editable->True,*)
(*GridBoxAlignment->{"Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},*)
(*GridBoxItemSize->{"Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},*)
(*GridBoxSpacings->{"Columns" -> {Offset[0.27999999999999997`], {Offset[0.84]}, Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {Offset[0.2], {Offset[0.4]}, Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},*)
(*Selectable->True]}*)
(*},*)
(*GridBoxAlignment->{"Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},*)
(*GridBoxItemSize->{"Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},*)
(*GridBoxSpacings->{"Columns" -> {Offset[0.27999999999999997`], {Offset[0.35]}, Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {Offset[0.2], {Offset[0.4]}, Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}],*)
(*"Piecewise",*)
(*DeleteWithContents->True,*)
(*Editable->False,*)
(*SelectWithContents->True,*)
(*Selectable->False]\);*)
(*scale={a/Cos[rotation],d/Cos[rotation]};*)
(*(*Print["Rotation: ",rotation*180/Pi];*)*)
(*{"rotation"->rotation,"translation"->{x,y},"scale"->scale}];*)
(*ExportImages[dir_,imgs_,format_:"PNG"]:=*)
(*imgs/.(index_->img_):>Export[dir<>"/"<>index<>".png",img,"PNG"];*)
(*ImportImages[dir_]:=FileNames["*.png",dir]/.png_String:>StringCases[png,__~~"\\"~~name__~~".png":>name->Import[png]][[1]];*)
